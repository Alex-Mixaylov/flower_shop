import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.exceptions import TelegramAPIError
from django.conf import settings
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∑–∫–∞ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_ADMIN_ID = os.getenv("TELEGRAM_ADMIN_ID")

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logger = logging.getLogger('bot')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher()

async def send_order_notification(order, event="created"):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram –æ –∑–∞–∫–∞–∑–µ.
    :param order: —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥–µ–ª–∏ Order
    :param event: —Å–æ–±—ã—Ç–∏–µ ("created" –∏–ª–∏ "status_changed")
    """
    try:
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if event == "created":
            title = "üÜï –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!"
        elif event == "status_changed":
            title = "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞"
        else:
            title = "‚ÑπÔ∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ"

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        message_text = (
            f"{title}\n"
            f"–ó–∞–∫–∞–∑ ‚Ññ{order.id}\n"
            f"–°—Ç–∞—Ç—É—Å: {order.get_status_display()}\n"
            f"–ò–º—è –ø–æ–ª—É—á–∞—Ç–µ–ª—è: {order.delivery.full_name}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {order.customer_phone}\n"
            f"–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {order.delivery.address}\n\n"
            f"üì¶ –¢–æ–≤–∞—Ä—ã:\n"
        )

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
        for item in order.items.all():
            message_text += (
                f"  - {item.product.name} ‚Äî {item.quantity} —à—Ç., {item.total_price} —Ä—É–±.\n"
            )

        # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞
        message_text += f"\nüí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {order.total_price} —Ä—É–±."

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        await bot.send_message(chat_id=TELEGRAM_ADMIN_ID, text=message_text)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
        sent_images = set()  # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–≤–∞–∂–¥—ã
        for item in order.items.all():
            if item.product.image_main and item.product.image_main.url not in sent_images:
                await bot.send_photo(
                    chat_id=TELEGRAM_ADMIN_ID,
                    photo=item.product.image_main.url,
                    caption=f"{item.product.name}: {item.total_price} —Ä—É–±."
                )
                sent_images.add(item.product.image_main.url)  # –î–æ–±–∞–≤–ª—è–µ–º URL –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ

        logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ {order.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ.")

    except TelegramAPIError as e:
        logger.error(f"–û—à–∏–±–∫–∞ Telegram API –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
async def run_bot():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
    """
    await dp.start_polling(bot)
